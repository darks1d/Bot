from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext, CallbackQueryHandler
import random
import logging

logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

riddles_easy = [
    {"question": "–ß—Ç–æ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏?", "answer": "—Å–æ–Ω"},
    {"question": "–ß—Ç–æ –∏–¥–µ—Ç, –Ω–µ –¥–≤–∏–≥–∞—è—Å—å —Å –º–µ—Å—Ç–∞?", "answer": "—á–∞—Å—ã"},
    {"question": "–û–Ω —Å–µ–π—á–∞—Å –≤–µ–∑–¥–µ –∏ –≤—Å—é–¥—É,–±–µ–∑ –Ω–µ–≥–æ –Ω–µ –º–æ–≥—É—Ç –ª—é–¥–∏,–µ—Å–ª–∏ –≤–¥—Ä—É–≥ –µ–≥–æ –Ω–µ —Å—Ç–∞–Ω–µ—Ç,–≤ –º–∏—Ä–µ –ø–∞–Ω–∏–∫–∞ –Ω–∞—Å—Ç–∞–Ω–µ—Ç?", "answer": "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç"},
    {"question": "–¢–µ–º–Ω–∞—è, –±–æ–ª—å—à–∞—è,–ø–æ –Ω–µ–±—É –ª–µ—Ç–∞–µ—Ç?", "answer": "–¢—É—á–∞"},
    {"question": "–ö–∏—Å–ª—ã–π –∏ –ø—Ä–æ—Ç–∏–≤–Ω—ã–π –ø–ª–æ–¥,–Ω–∞ –¥–µ—Ä–µ–≤—å—è—Ö –æ–Ω —Ä–∞—Å—Ç—ë—Ç?", "answer": "–õ–∏–º–æ–Ω"},
    {"question": "–ó–∞ –∑—É–±–∞–º–∏ –æ–Ω —Å–∏–¥–∏—Ç,–º–Ω–µ —Å–ª–æ–≤–∞ –æ–Ω –≥–æ–≤–æ—Ä–∏—Ç?", "answer": "–Ø–∑—ã–∫"},
    {"question": "–° –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω –Ω–∞ –≥–æ–ª–æ–≤–µ,–ª—é–±—è—Ç –æ–Ω–∏ —Å–ª—É—à–∞—Ç—å?", "answer": "–£—à–∏"}
]

riddles_medium = [
    {"question": "–ß–µ–º –±–æ–ª—å—à–µ –∏–∑ –Ω–µ–µ –±–µ—Ä–µ—à—å, —Ç–µ–º –±–æ–ª—å—à–µ –æ–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —á—Ç–æ —ç—Ç–æ?", "answer": "—è–º–∞"},
    {"question": "–í–∏—Å–∏—Ç –≥—Ä—É—à–∞ ‚Äî –Ω–µ–ª—å–∑—è —Å–∫—É—à–∞—Ç—å. –ß—Ç–æ —ç—Ç–æ?", "answer": "–ª–∞–º–ø–æ—á–∫–∞"},
    {"question": "–ö–∞–∫ –º–æ–∂–Ω–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —É–≤–∏–¥–µ—Ç—å –ê–≤—Å—Ç—Ä–∞–ª–∏—é –∏ –ê–º–µ—Ä–∏–∫—É?", "answer": "–ù–∞ –∫–∞—Ä—Ç–µ"},
    {"question": "–û–Ω–æ –º–æ–∂–µ—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ª—é–±–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–∏–¥—É–º–∞–µ—Ç –Ω–∏—á–µ–≥–æ –Ω–æ–≤–æ–≥–æ?", "answer": "–ó–µ—Ä–∫–∞–ª–æ"},
    {"question": "–ß—Ç–æ –Ω–∞ —Å–≤–µ—Ç–µ, –ª–µ–≥–∫–æ–µ, –∫–∞–∫ —Å–Ω–µ–∂–∏–Ω–∫–∞, –∞ –Ω–µ —É–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∏ –ø—è—Ç–∏ –º–∏–Ω—É—Ç?", "answer": "–î—ã—Ö—ã–Ω–∏–µ"},
    {"question": "–ï—Å–ª–∏ –∏—Ö –º–Ω–æ–≥–æ ‚Äî —Ç–æ –≤–µ—Å —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ –Ω—É–ª—é?", "answer": "–î—ã—Ä–∫–∏"},
]

riddles_hard = [
    {"question": "–ß—Ç–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –≤–∞–º, –Ω–æ –¥—Ä—É–≥–∏–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —ç—Ç–æ —á–∞—â–µ, —á–µ–º –≤—ã?", "answer": "–∏–º—è"},
    {"question": "–ß—Ç–æ –º–æ–∂–Ω–æ —Å–ª–æ–º–∞—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å?", "answer": "–æ–±–µ—â–∞–Ω–∏–µ"},
    {"question": "–ß—Ç–æ –º–æ–∂–Ω–æ –∏–∑–º–µ—Ä–∏—Ç—å, –Ω–æ –Ω–µ–ª—å–∑—è —É–≤–∏–¥–µ—Ç—å –∏–ª–∏ –ø–æ—Ç—Ä–æ–≥–∞—Ç—å?", "answer": "–í—Ä–µ–º—è"},
    {"question": "–ï—Å—Ç—å —Ç—Ä–∏ –ª–∏—Ç—Ä–∞ –∫–µ—Ñ–∏—Ä–∞. –ö–∞–∫ –µ–≥–æ —É–º–µ—Å—Ç–∏—Ç—å –≤ –ª–∏—Ç—Ä–æ–≤—É—é –±–∞–Ω–∫—É?", "answer": "–°–≤–∞—Ä–∏—Ç—å —Ç–≤–æ—Ä–æ–≥"},
    {"question": "–û–Ω–æ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å, –Ω–æ —Ç–æ—á–Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∂–µ—Ç?", "answer": "–†–∞–¥–∏–æ"},
    {"question": "–û–Ω–∞ –≤–µ–∑–¥–µ: –≤ –ø–æ—á–≤–µ, –≤ –Ω–µ–±–µ, –≤ –≤–æ–∑–¥—É—Ö–µ, –≤ —Ä–µ–∫–µ, –≤ –º–æ—Ä–µ, –≤ –æ–≤–æ—â–∞—Ö, –≤–æ —Ñ—Ä—É–∫—Ç–∞—Ö –∏ –¥–∞–∂–µ –≤ —á–µ–ª–æ–≤–µ–∫–µ?", "answer": "–í–æ–¥–∞"},
    {"question": "–û–Ω–∏ –≤–µ–¥—É—Ç –Ω–∞—Å –≤–ø–µ—Ä–µ–¥, —Ö–æ—Ç—è —Å–∞–º–∏ –≤—Å–µ–≥–¥–∞ —Ö–æ–¥—è—Ç –ø–æ –∫—Ä—É–≥—É?", "answer": "–°—Ç—Ä–µ–ª–∫–∏ –Ω–∞ —á–∞—Å–∞—Ö"},
    {"question": "–ö–∞–∫ —Å–ø—Ä—ã–≥–Ω—É—Ç—å —Å –ª–µ—Å—Ç–Ω–∏—Ü—ã –≤—ã—Å–æ—Ç–Ω–æ–≥–æ –∑–¥–∞–Ω–∏—è,—á—Ç–æ–± –Ω–µ –±—ã–ª–æ –ø–µ—Ä–µ–ª–æ–º–æ–≤ –∏ —Å –∂–∏–∑–Ω—å—é –ø—Ä–æ—â–∞–Ω–∏—è?", "answer": "–ù–∞–¥–æ –ø—Ä—ã–≥–∞—Ç—å —Å —Å–∞–º–æ–π –Ω–∏–∂–Ω–µ–π —Å—Ç—É–ø–µ–Ω–∏"},
]

async def start(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data='start_game')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∑–∞–≥–∞–¥–æ—á–Ω–∏–∫. –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.", reply_markup=reply_markup)

async def start_game(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()

    keyboard = [
        [InlineKeyboardButton("–õ–µ–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å", callback_data='easy')],
        [InlineKeyboardButton("–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å", callback_data='medium')],
        [InlineKeyboardButton("–°–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å", callback_data='hard')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text("–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:", reply_markup=reply_markup)

async def choose_level(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()

    level = query.data
    context.user_data["level"] = level
    context.user_data["used_riddles"] = []

    await send_riddle(update, context)

async def send_riddle(update: Update, context: CallbackContext):
    level = context.user_data.get("level")

    if level == "easy":
        riddle_data = random.choice(riddles_easy)
    elif level == "medium":
        riddle_data = random.choice(riddles_medium)
    elif level == "hard":
        riddle_data = random.choice(riddles_hard)
    else:
        riddle_data = random.choice(riddles_easy)

    question = riddle_data["question"]
    context.user_data["current_answer"] = riddle_data["answer"]

    if update.callback_query:
        await update.callback_query.edit_message_text(f"–ó–∞–≥–∞–¥–∫–∞: {question}")
    else:
        await update.message.reply_text(f"–ó–∞–≥–∞–¥–∫–∞: {question}")

async def handle_message(update: Update, context: CallbackContext):
    user_answer = update.message.text.lower()
    correct_answer = context.user_data.get("current_answer", "")

    if user_answer == correct_answer:
        keyboard = [
            [InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏", callback_data='start_game')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text("–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ú–æ–ª–æ–¥–µ—Ü! üéâ", reply_markup=reply_markup)
    else:
        await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!")

def main():

    TOKEN = "7709523457:AAGdkIBWgJdOzqXI9Q_5qzelVDllElTiE_4"

    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))

    application.add_handler(CallbackQueryHandler(start_game, pattern='start_game'))
    application.add_handler(CallbackQueryHandler(choose_level, pattern='^(easy|medium|hard)$'))

    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    application.run_polling()

if __name__ == '__main__':
    main()
