from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import random

# –°–ø–∏—Å–æ–∫ –∑–∞–≥–∞–¥–æ–∫ –∏ –æ—Ç–≤–µ—Ç–æ–≤
riddles = [
    {"question": "–ß—Ç–æ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏?", "answer": "—Å–æ–Ω"},
    {"question": "–ß—Ç–æ –∏–¥–µ—Ç, –Ω–µ –¥–≤–∏–≥–∞—è—Å—å —Å –º–µ—Å—Ç–∞?", "answer": "—á–∞—Å—ã"},
    {"question": "–ß–µ–º –±–æ–ª—å—à–µ –∏–∑ –Ω–µ–µ –±–µ—Ä–µ—à—å, —Ç–µ–º –±–æ–ª—å—à–µ –æ–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è. –ß—Ç–æ —ç—Ç–æ?", "answer": "—è–º–∞"},
    {"question": "–í–∏—Å–∏—Ç –≥—Ä—É—à–∞ ‚Äî –Ω–µ–ª—å–∑—è —Å–∫—É—à–∞—Ç—å. –ß—Ç–æ —ç—Ç–æ?", "answer": "–ª–∞–º–ø–æ—á–∫–∞"},
    {"question": "–ß—Ç–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –≤–∞–º, –Ω–æ –¥—Ä—É–≥–∏–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —ç—Ç–æ —á–∞—â–µ, —á–µ–º –≤—ã?", "answer": "–∏–º—è"},
]

def start(update: Update, context: CallbackContext):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∑–∞–≥–∞–¥–æ—á–Ω–∏–∫. –ù–∞–ø–∏—à–∏ /riddle, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–≥–∞–¥–∫—É.")

def riddle(update: Update, context: CallbackContext):
    riddle_data = random.choice(riddles)
    question = riddle_data["question"]
    context.user_data["current_answer"] = riddle_data["answer"] 
    update.message.reply_text(f"–ó–∞–≥–∞–¥–∫–∞: {question}")

def handle_message(update: Update, context: CallbackContext):
    user_answer = update.message.text.lower()
    correct_answer = context.user_data.get("current_answer", "")

    if user_answer == correct_answer:
        update.message.reply_text("–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ú–æ–ª–æ–¥–µ—Ü! üéâ –ù–∞–ø–∏—à–∏ /riddle –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–≥–∞–¥–∫–∏.")
    else:
        update.message.reply_text("–ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!")

def main():
    TOKEN = "7709523457:AAGdkIBWgJd0ZQXI9Q_5QZElVDllElTiE_4"

    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("riddle", riddle))
        
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()


